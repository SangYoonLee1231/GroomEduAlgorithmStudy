#include <cstdio>
#include <vector>

using namespace std;

long long getGCD(long long a, long long b)
{
	long long temp = a % b;
	
	while (temp != 0)
	{
		a = b;
		b = temp;
		temp = a % b;
	}
	return b;
}

long long getLCM(long a, long b)
{
	return a * b / getGCD(a, b);
}

/**
 * 여러 숫자에 대한 공통 최소 공배수를 계산하는 함수
 *
 * @param numbers
 * @return
 */
long long getLCM(vector<long long>& numbers)
{
	for (int i = 0; i < numbers.size() - 1; i++)
	{
		numbers[i+1] = getLCM(numbers[i], numbers[i+1]);
	}
	
	return numbers.back();
}

/**
 * 모든 수열이 동시에 최초의 원소를 만나는 최소 주기를 계산하는 함수
 *
 * @param n     수열의 수
 * @param sizes 각 순환 수열의 길이(주기)
 * @return
 */
long long getGlobalPeriod(vector<long long>& sizes)
{
	return getLCM(sizes);
}

int main()
{
	int n;
	scanf("%d", &n);

	vector<long long> sizes(n);

	for (int i = 0; i < n ; i += 1) {
		scanf("%lld", &sizes[i]);
	}

	long long answer = 1 + getGlobalPeriod(sizes);
	printf("%lld\n", answer);
}
